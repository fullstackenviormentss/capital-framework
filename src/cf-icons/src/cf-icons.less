/* ==========================================================================
   Capital Framework
   Icons
   ========================================================================== */

// Import external dependencies

@import '../../cf-core/src/cf-core.less';

//
// Less variables
//

@cf-icon-prefix:                cf-icon;
@cf-icon-path:                  'icons';
@cf-icon-border-color:          #5b616b; //$color-gray in 18F's web design standards

// The class .cf-icon is used to support adding these rules via a mixin,
// specifically when @cf-icon-prefix is changed to something other than
// 'cf-icon', since string interpolation is incompatible with mixin calls.
//
// For example you can't do this:
// .link-with-auto-icon {
//   .@{cf-icon-prefix}();
// }
//
// But you can do this:
// .link-with-auto-icon {
//   .@cf-icon();
// }
.cf-icon,
.@{cf-icon-prefix} {
  display: inline-block;
  fill: currentColor;
  height: 1em;
  width: 1em;
  vertical-align: -.1em;
}

//
// Helper classes for icon sizes
//

// makes the font 33% larger relative to the icon container
.@{cf-icon-prefix}__lg {
  width: (4em / 3);
  height: (4em / 3);
}

.@{cf-icon-prefix}__2x {
  width: 2em;
  height: 2em;
}
.@{cf-icon-prefix}__3x {
  width: 3em;
  height: 3em;
}
.@{cf-icon-prefix}__4x {
  width: 4em;
  height: 4em;
}
.@{cf-icon-prefix}__5x {
  width: 5em;
  height: 5em;
}

//
// Mixin classes
//

.cf-icon__rotate(@degrees, @rotation) {
  // TOOD: Check whether `filter` can be replaced
  //       by `-ms-transform` for CF supported browsers.
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=@rotation);
  transform: rotate(@degrees);
}

.cf-icon__flip(@horiz, @vert, @rotation) {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=@rotation, mirror=1);
  transform: scale(@horiz, @vert);
}
//
// Helper classes for modified icons
//

.@{cf-icon-prefix}__border {
  padding: .2em .25em .15em;
  border: solid .08em @cf-icon-border-color;
  border-radius: .1em;
}

.@{cf-icon-prefix}__rotate-90  { .cf-icon__rotate(90deg, 1);  }
.@{cf-icon-prefix}__rotate-180 { .cf-icon__rotate(180deg, 2); }
.@{cf-icon-prefix}__rotate-270 { .cf-icon__rotate(270deg, 3); }

.@{cf-icon-prefix}__flip-horizontal { .cf-icon__flip(-1, 1, 0); }
.@{cf-icon-prefix}__flip-vertical   { .cf-icon__flip(1, -1, 2); }

:root .@{cf-icon-prefix}__rotate-90,
:root .@{cf-icon-prefix}__rotate-180,
:root .@{cf-icon-prefix}__rotate-270,
:root .@{cf-icon-prefix}__flip-horizontal,
:root .@{cf-icon-prefix}__flip-vertical {
  filter: none;
}

//
// Helper classes for animated icons
//

.@{cf-icon-prefix}__spin {
  animation: cf-spin 2s infinite linear;
}

.@{cf-icon-prefix}__pulse {
  animation: cf-spin 1s infinite steps(8);
}

@keyframes cf-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(359deg);
  }
}
